define(["stapes","google/maps","util/gm-label-marker"],function(Stapes,gm,MarkerWithLabel){var MarkerManager=Stapes.create().extend({options:{map:null,markerDefaults:{}},init:function(opts){return this.extend(this.options.markerDefaults,opts.markerDefaults),opts.markerDefaults=this.options.markerDefaults,this.extend(this.options,opts),this.initModel(this.options.model),this.emit("ready"),this},initModel:function(model){if(!model)return this;var self=this,map=self.options.map,proj=map.getProjection();return proj?(this.model=model,model.each(function(entry,id){var pos=proj.fromPointToLatLng(new gm.Point(entry.x,entry.y),!0),m;self.addMarker(id,{position:pos,title:entry.name,labelContent:entry.name})}),model.on({create:function(id){var entry=this.get(id),pos=proj.fromPointToLatLng(new gm.Point(entry.x,entry.y),!0),m;self.addMarker(id,{position:pos,title:entry.name,labelContent:entry.name})},change:function(id){if(!self.has(id))return;var entry=this.get(id),pos=proj.fromPointToLatLng(new gm.Point(entry.x,entry.y),!0);self.get(id).setPosition(pos)},remove:function(id){self.get(id).setMap(null),self.remove(id)}}),this):(gm.event.addListenerOnce(map,"projection_changed",function(){self.initModel(model)}),this)},focusTo:function(id){var m=this.get(id),map=this.options.map,pos,l;return!m||!map?this:(pos=m.getPosition(),l=pos.lng()+180,pos=new gm.LatLng(pos.lat(),(l<0?l%360+360:l%360)-180,!0),map.setCenter(pos),map.setZoom(5),this)},addMarker:function(id,opts){var settings=Stapes.util.clone(this.options.markerDefaults),m;Stapes.util.each(opts,function(val,key){val&&(settings[key]=val)}),m=new MarkerWithLabel(settings),m.setMap(this.options.map),gm.event.clearListeners(m.label.eventDiv_),this.set(id,m)}});return{init:function(opts){return MarkerManager.create().init(opts)}}})